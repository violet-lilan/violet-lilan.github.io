{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://violet-lilan.github.io","root":"/"},"pages":[{"title":"关于","date":"2024-11-10T06:47:04.052Z","updated":"2024-11-10T06:47:04.052Z","comments":false,"path":"about/index.html","permalink":"https://violet-lilan.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2024-11-10T07:04:40.669Z","updated":"2024-11-10T06:47:04.052Z","comments":false,"path":"books/index.html","permalink":"https://violet-lilan.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2024-11-10T06:47:04.053Z","updated":"2024-11-10T06:47:04.053Z","comments":false,"path":"categories/index.html","permalink":"https://violet-lilan.github.io/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2024-11-11T02:51:23.376Z","updated":"2024-11-10T06:47:04.054Z","comments":false,"path":"repository/index.html","permalink":"https://violet-lilan.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-11-10T06:47:04.056Z","updated":"2024-11-10T06:47:04.056Z","comments":false,"path":"tags/index.html","permalink":"https://violet-lilan.github.io/tags/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2024-11-11T02:51:38.884Z","updated":"2024-11-10T06:47:04.053Z","comments":true,"path":"links/index.html","permalink":"https://violet-lilan.github.io/links/index.html","excerpt":"","text":""}],"posts":[{"title":"Leetcode刷题之数组篇","slug":"Leetcode刷题之数组篇","date":"2024-11-14T13:58:29.000Z","updated":"2024-11-26T03:12:56.136Z","comments":true,"path":"2024/11/14/Leetcode刷题之数组篇/","permalink":"https://violet-lilan.github.io/2024/11/14/Leetcode%E5%88%B7%E9%A2%98%E4%B9%8B%E6%95%B0%E7%BB%84%E7%AF%87/","excerpt":"","text":"Leetcode刷题–数组篇学习参考：代码随想录 一、二分查找法题目1 二分查找1） 题目给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。 示例一 &#123;.line-numbers&#125;123输入: nums = [-1,0,3,5,9,12], target = 9 输出: 4 解释: 9 出现在 nums 中并且下标为 4 示例二 &#123;.line-numbers&#125;123输入: nums = [-1,0,3,5,9,12], target = 2 输出: -1 解释: 2 不存在 nums 中因此返回 -1 2） 解题思路题目前提：数组为有序数组，并且数组中无重复元素 注意理解：区间的定义：区间内的数（下标）都是还未确定与 target 的大小关系的，有的是 &lt; target，有的是 ≥ target；区间外的数（下标）都是确定与 target 的大小关系的。 3）代码实现左闭右闭区间 1234567891011121314151617181920class Solution &#123;public: int searchInsert(vector&lt;int&gt;&amp; nums, int target) &#123; int left = 0; int right = nums.size()-1; int ans = nums.size(); while(left&lt;=right) &#123; int middle= left+(right-left)/2 ; if(nums[middle] &gt;= target) &#123; ans = middle; right = middle-1 ; &#125; else if(nums[middle] &lt; target) left = middle+1; &#125; return ans; &#125;&#125;; 时间复杂度：O(log(n)) 空间复杂度：O(1) 左闭右开区间 1.while (left &lt; right)，这里使用 &lt; ,因为left &#x3D;&#x3D; right在区间[left, right)是没有意义的 2.if (nums[middle] &gt; target) right 更新为 middle，因为当前nums[middle]不等于target，去左区间继续寻找，而寻找区间是左闭右开区间，所以right更新为middle，即：下一个查询区间不会去比较nums[middle] 12345678910111213141516171819class Solution &#123;public: int search(vector&lt;int&gt;&amp; nums, int target) &#123; int left = 0; int right = nums.size(); // 定义target在左闭右开的区间里，即：[left, right) while (left &lt; right) &#123; // 因为left == right的时候，在[left, right)是无效的空间，所以使用 &lt; int middle = left + ((right - left) &gt;&gt; 1); if (nums[middle] &gt; target) &#123; right = middle; // target 在左区间，在[left, middle)中 &#125; else if (nums[middle] &lt; target) &#123; left = middle + 1; // target 在右区间，在[middle + 1, right)中 &#125; else &#123; // nums[middle] == target return middle; // 数组中找到目标值，直接返回下标 &#125; &#125; // 未找到目标值 return -1; &#125;&#125;; 时间复杂度：O(log(n)) 空间复杂度：O(1) 题目2 搜索插入位置给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 你可以假设数组中无重复元素。 示例一 &#123;.line-numbers&#125;12输入: [1,3,5,6], 5输出: 2 示例二 &#123;.line-numbers&#125;12输入: [1,3,5,6], 2输出: 1 示例三 &#123;.line-numbers&#125;123```C++ &#123;.line-numbers&#125;输入: [1,3,5,6], 5输出: 2 示例三 &#123;.line-numbers&#125;12输入: [1,3,5,6], 7输出: 4 示例四 &#123;.line-numbers&#125;12输入: [1,3,5,6], 0输出: 0","categories":[],"tags":[]},{"title":"第一篇博客","slug":"第一篇博客","date":"2024-11-11T07:40:34.000Z","updated":"2024-11-11T07:56:11.877Z","comments":true,"path":"2024/11/11/第一篇博客/","permalink":"https://violet-lilan.github.io/2024/11/11/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"我的第一篇博客欢迎大家浏览我的博客 希望这不会是我的唯一一篇博客哈哈哈","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2024-11-08T17:17:49.155Z","updated":"2024-11-08T17:17:49.155Z","comments":true,"path":"2024/11/09/hello-world/","permalink":"https://violet-lilan.github.io/2024/11/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}